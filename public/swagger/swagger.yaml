openapi: 3.0.0
info:
  title: 'My first API'
  contact:
    email: support@example.com
  version: 1.0.0
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: 'Autenticação de usuário'
      operationId: AuthLogin
      parameters:
        -
          name: email
          in: query
          description: 'E-mail para autenticação'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Senha para autenticação'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  /admin/auth/login:
    post:
      tags:
        - auth
      summary: 'Autenticação da administração'
      operationId: AuthAdminLogin
      parameters:
        -
          name: email
          in: query
          description: 'E-mail para autenticação'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Senha para autenticação'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  /auth/refresh:
    post:
      tags:
        - auth
      summary: 'Atualiza o token atual do usuário'
      operationId: AuthRefresh
      responses:
        '200':
          description: ...
  /auth/forgot:
    post:
      tags:
        - auth
      summary: 'Autenticação da administração'
      operationId: ForgotPassword
      parameters:
        -
          name: email
          in: query
          description: 'E-mail do usuário'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  /auth/checkToken:
    post:
      tags:
        - auth
      summary: 'Verificação do token'
      operationId: CheckToken
      parameters:
        -
          name: email
          in: query
          description: 'E-mail do usuário'
          required: true
          schema:
            type: string
        -
          name: token
          in: query
          description: 'Token enviado no email do usuário'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  '/auth/reset/{token}':
    post:
      tags:
        - auth
      summary: 'Reset na senha do usuário'
      operationId: ResetPassword
      parameters:
        -
          name: token
          in: query
          description: 'Token enviado no email do usuário'
          required: true
          schema:
            type: string
        -
          name: email
          in: query
          description: 'E-mail do usuário'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Nova senha do usuário'
          required: true
          schema:
            type: string
        -
          name: password_confirmation
          in: query
          description: 'Confirmação da nova senha'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  '/sections/{section_id}/lessons':
    get:
      tags:
        - lessons
      summary: 'Lista todas as lições'
      operationId: GetLessons
      parameters:
        -
          name: section_id
          in: path
          description: 'Id da seção'
          required: true
          schema:
            type: integer
        -
          name: includes
          in: query
          description: 'Faz o include das relações'
          required: false
          schema:
            type: array
            items:
              type: string
        -
          name: name
          in: query
          description: 'Nome da lição'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ...
    post:
      tags:
        - lessons
      summary: 'Cria uma nova lição'
      operationId: StoreLesson
      parameters:
        -
          name: section_id
          in: path
          description: 'Id da seção no path'
          required: true
          schema:
            type: integer
        -
          name: name
          in: query
          description: 'Nome da lição'
          required: true
          schema:
            type: string
        -
          name: content
          in: query
          description: 'Conteúdo da lição'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
  '/sections/{section_id}/lessons/{lesson_id}':
    get:
      tags:
        - lessons
      summary: 'Lista uma lição'
      operationId: GetLesson
      parameters:
        -
          name: section_id
          in: path
          description: 'Id da seção'
          required: true
          schema:
            type: integer
        -
          name: lesson_id
          in: path
          description: 'Id da lição'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ...
    put:
      tags:
        - lessons
      summary: 'Atualiza uma lição'
      operationId: UpdateLesson
      parameters:
        -
          name: section_id
          in: path
          description: 'Id da seção'
          required: true
          schema:
            type: integer
        -
          name: lesson_id
          in: path
          description: 'Id da lição'
          required: true
          schema:
            type: integer
        -
          name: name
          in: query
          description: 'Nome da lição'
          required: true
          schema:
            type: string
        -
          name: content
          in: query
          description: 'Conteúdo da lição'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
    delete:
      tags:
        - lessons
      summary: 'Lista uma lição'
      operationId: DeleteLesson
      parameters:
        -
          name: section_id
          in: path
          description: 'Id da seção'
          required: true
          schema:
            type: integer
        -
          name: lesson_id
          in: path
          description: 'Id da lição'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ...
  /sections:
    get:
      tags:
        - sections
      summary: 'Lista todas as seções'
      operationId: GetSections
      parameters:
        -
          name: name
          in: query
          description: 'Nome da seção'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ...
    post:
      tags:
        - sections
      summary: 'Cria uma nova seção'
      operationId: StoreSection
      parameters:
        -
          name: name
          in: query
          description: 'Nome da seção'
          required: true
          schema:
            type: string
        -
          name: description
          in: query
          description: 'Descrição da seção'
          required: true
          schema:
            type: string
        -
          name: order
          in: query
          description: 'Ordem da seção'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: ...
  '/sections/{section_id}':
    get:
      tags:
        - sections
      summary: 'Lista uma seções'
      operationId: GetSection
      parameters:
        -
          name: section_id
          in: path
          description: 'Id da seção'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ...
    put:
      tags:
        - sections
      summary: 'Atualiza uma seção'
      operationId: UpdateSection
      parameters:
        -
          name: section_id
          in: path
          description: 'Id da seção'
          required: true
          schema:
            type: integer
        -
          name: name
          in: query
          description: 'Nome da seção'
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          description: 'Descrição da seção'
          required: false
          schema:
            type: string
        -
          name: order
          in: query
          description: 'Ordem da seção'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: ...
    delete:
      tags:
        - sections
      summary: 'Apaga uma seção'
      operationId: DeleteSection
      parameters:
        -
          name: section_id
          in: path
          description: 'Id da seção'
          required: true
          schema:
            type: number
      responses:
        '200':
          description: ...
  /users/me:
    get:
      tags:
        - users
      summary: 'Retorna o usuário logado'
      operationId: GetAuthUser
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
    put:
      tags:
        - users
      summary: 'Atualiza o usuário'
      operationId: UpdateAuthUser
      parameters:
        -
          name: first_name
          in: query
          description: 'Primeiro nome'
          required: false
          schema:
            type: string
        -
          name: last_name
          in: query
          description: 'Ultimo nome'
          required: false
          schema:
            type: string
        -
          name: document_number
          in: query
          description: 'Documento CPF'
          required: false
          schema:
            type: string
        -
          name: address_street
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_number
          in: query
          description: 'Numero da casa do rapaz'
          required: false
          schema:
            type: string
        -
          name: address_city
          in: query
          description: 'Cidade onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_state
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'E-mail do cidadão'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ...
      security:
        -
          apiToken: []
  /users:
    get:
      tags:
        - users
      summary: 'Lista todas os usuários'
      operationId: GetUsers
      parameters:
        -
          name: includes
          in: query
          description: 'Faz o include das relações '
          required: false
          schema:
            type: array
            items:
              type: string
        -
          name: first_name
          in: query
          description: 'Nome do usuário'
          required: false
          schema:
            type: string
        -
          name: last_name
          in: query
          description: 'Sobrenome do usuário'
          required: false
          schema:
            type: string
        -
          name: document_number
          in: query
          description: CPF/CNPJ
          required: false
          schema:
            type: string
        -
          name: is_admin
          in: query
          description: 'Status de Administrador'
          required: false
          schema:
            type: number
            enum:
              - 0
              - 1
      responses:
        '200':
          description: ...
    put:
      tags:
        - users
      summary: 'Atualiza um usuário'
      operationId: UpdateUser
      parameters:
        -
          name: document_number
          in: query
          description: 'Documento CPF'
          required: false
          schema:
            type: string
        -
          name: first_name
          in: query
          description: 'Primeiro nome'
          required: false
          schema:
            type: string
        -
          name: last_name
          in: query
          description: 'Ultimo nome'
          required: false
          schema:
            type: string
        -
          name: address_street
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_number
          in: query
          description: 'Numero da casa do rapaz'
          required: false
          schema:
            type: string
        -
          name: address_city
          in: query
          description: 'Cidade onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_state
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'E-mail do cidadão'
          required: false
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Senha do cidadão'
          required: false
          schema:
            type: string
        -
          name: is_admin
          in: query
          description: 'Status de Administrador'
          required: false
          schema:
            type: number
            enum:
              - 0
              - 1
        -
          name: facebook_id
          in: query
          description: 'ID do Facebook'
          required: false
          schema:
            type: number
        -
          name: google_id
          in: query
          description: 'ID do Google'
          required: false
          schema:
            type: number
      responses:
        '200':
          description: ...
    post:
      tags:
        - users
      summary: 'Cria um novo usuário'
      operationId: StoreUser
      parameters:
        -
          name: first_name
          in: query
          description: 'Primeiro nome'
          required: true
          schema:
            type: string
        -
          name: last_name
          in: query
          description: 'Ultimo nome'
          required: true
          schema:
            type: string
        -
          name: document_number
          in: query
          description: 'Documento CPF'
          required: false
          schema:
            type: string
        -
          name: address_street
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_number
          in: query
          description: 'Numero da casa do rapaz'
          required: false
          schema:
            type: string
        -
          name: address_city
          in: query
          description: 'Cidade onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: address_state
          in: query
          description: 'Rua onde o rapaz mora'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'E-mail do cidadão'
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: 'Senha do cidadão'
          required: true
          schema:
            type: string
        -
          name: is_admin
          in: query
          description: 'Status de Administrador'
          required: true
          schema:
            type: number
            enum:
              - 0
              - 1
      responses:
        '200':
          description: ...
  '/users/{id}':
    get:
      tags:
        - users
      summary: 'Lista um usuário'
      operationId: GetUser
      parameters:
        -
          name: id
          in: path
          description: 'Id do usuário'
          required: true
          schema:
            type: number
      responses:
        '200':
          description: ...
    delete:
      tags:
        - users
      summary: 'Apaga um usuário'
      operationId: DeleteUser
      parameters:
        -
          name: id
          in: path
          description: 'Id do usuário'
          required: true
          schema:
            type: number
      responses:
        '200':
          description: ...
components:
  securitySchemes:
    apiToken:
      type: apiKey
      description: 'Token do client para consumo da API'
      name: Authorization
      in: header
      scheme: bearer
